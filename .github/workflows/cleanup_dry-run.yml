name: Docker Tags Dry-Run

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: "Only list tags without deletion"
        required: false
        default: "true"

env:
  DOCKER_IMAGE: kman0001/tubesync-plex
  TEST_MODE: ${{ github.event.inputs.test_mode }}

jobs:
  dry-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: List old tags (Dry-Run)
        run: |
          echo "=== DRY-RUN: Listing old tags ==="
          REPO="${{ env.DOCKER_IMAGE }}"
          USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
          TOKEN="${{ secrets.DOCKERHUB_TOKEN }}"

          REPO_ENCODED=$(python3 -c "import urllib.parse, os; print(urllib.parse.quote(os.environ.get('REPO','')))")

          URL="https://hub.docker.com/v2/repositories/$REPO_ENCODED/tags/?page_size=100"

          while [ -n "$URL" ]; do
            RESPONSE=$(curl -s -u "$USERNAME:$TOKEN" "$URL")

            if ! echo "$RESPONSE" | jq empty >/dev/null 2>&1; then
              echo "‚ùå Invalid JSON response. Stop listing."
              break
            fi

            TAGS=$(echo "$RESPONSE" | jq -r '.results[]?.name // empty')

            for TAG in $TAGS; do
              if [[ "$TAG" != "latest" && "$TAG" != "latest-amd64" && "$TAG" != "latest-arm64" ]]; then
                echo "[DRY-RUN] Found old tag: $TAG"
              fi
            done

            URL=$(echo "$RESPONSE" | jq -r '.next')
            if [[ "$URL" == "null" ]]; then URL=""; fi
          done
