name: FFmpeg Multi-Arch Minimal Build

on:
  schedule:
    - cron: '0 1 1 * *' # 매월 1일 UTC 00:00
  workflow_dispatch:    # 수동 실행 가능

jobs:
  build-x86_64:
    name: Build FFmpeg x86_64
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            autoconf automake build-essential cmake git \
            libtool pkg-config yasm nasm curl wget \
            zlib1g-dev libfdk-aac-dev libass-dev

      - name: Fetch latest FFmpeg version
        id: ffver
        run: |
          LATEST=$(curl -s https://ffmpeg.org/releases/ | grep -oP 'ffmpeg-\K[0-9]+\.[0-9]+(\.[0-9]+)?(?=\.tar\.bz2)' | sort -V | tail -1)
          echo "FF_VERSION=$LATEST" >> $GITHUB_ENV
          echo "Latest FFmpeg version: $LATEST"

      - name: Download FFmpeg source
        run: |
          wget https://ffmpeg.org/releases/ffmpeg-${FF_VERSION}.tar.bz2
          tar xjf ffmpeg-${FF_VERSION}.tar.bz2

      - name: Configure & build minimal FFmpeg (x86_64)
        run: |
          cd ffmpeg-${FF_VERSION}
          mkdir -p build/x86_64
          ./configure \
            --prefix=$PWD/build/x86_64 \
            --disable-doc \
            --disable-ffplay \
            --disable-network \
            --disable-debug \
            --enable-small \
            --disable-programs \
            --disable-everything \
            --enable-decoder=subrip \
            --enable-decoder=dvdsub \
            --enable-decoder=hdmv_pgs \
            --enable-demuxer=mov \
            --enable-demuxer=matroska \
            --enable-muxer=mp4 \
            --enable-muxer=mkv \
            --enable-parser=subrip
          make -j$(nproc)
          make install
          echo $FF_VERSION > build/x86_64/version.txt

      - name: Upload x86_64 FFmpeg binaries
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-x86_64
          path: ffmpeg-${FF_VERSION}/build/x86_64/bin/

  build-aarch64:
    name: Build FFmpeg aarch64
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup QEMU (ARM emulation)
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            autoconf automake build-essential cmake git \
            libtool pkg-config yasm nasm curl wget \
            zlib1g-dev libfdk-aac-dev libass-dev \
            gcc-aarch64-linux-gnu

      - name: Fetch latest FFmpeg version
        id: ffver
        run: |
          LATEST=$(curl -s https://ffmpeg.org/releases/ | grep -oP 'ffmpeg-\K[0-9]+\.[0-9]+(\.[0-9]+)?(?=\.tar\.bz2)' | sort -V | tail -1)
          echo "FF_VERSION=$LATEST" >> $GITHUB_ENV
          echo "Latest FFmpeg version: $LATEST"

      - name: Download FFmpeg source
        run: |
          wget https://ffmpeg.org/releases/ffmpeg-${FF_VERSION}.tar.bz2
          tar xjf ffmpeg-${FF_VERSION}.tar.bz2

      - name: Configure & build minimal FFmpeg (aarch64)
        run: |
          cd ffmpeg-${FF_VERSION}
          mkdir -p build/aarch64
          ./configure \
            --prefix=$PWD/build/aarch64 \
            --arch=aarch64 \
            --cross-prefix=aarch64-linux-gnu- \
            --disable-doc \
            --disable-ffplay \
            --disable-network \
            --disable-debug \
            --enable-small \
            --disable-programs \
            --disable-everything \
            --enable-decoder=subrip \
            --enable-decoder=dvdsub \
            --enable-decoder=hdmv_pgs \
            --enable-demuxer=mov \
            --enable-demuxer=matroska \
            --enable-muxer=mp4 \
            --enable-muxer=mkv \
            --enable-parser=subrip
          make -j$(nproc)
          make install
          echo $FF_VERSION > build/aarch64/version.txt

      - name: Upload aarch64 FFmpeg binaries
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-aarch64
          path: ffmpeg-${FF_VERSION}/build/aarch64/bin/
