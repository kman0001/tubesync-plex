name: FFmpeg Multi-Arch Minimal Build

on:
  schedule:
    - cron: '0 1 1 * *'  # 매월 1일 UTC 01:00
  workflow_dispatch:     # 수동 실행 가능

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ARCHS: x86_64 aarch64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            autoconf automake build-essential cmake git \
            libtool pkg-config yasm nasm curl wget \
            zlib1g-dev libfdk-aac-dev libass-dev \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Fetch latest FFmpeg release version
        id: ffver
        run: |
          LATEST=$(curl -s https://ffmpeg.org/releases/ | grep -oE 'ffmpeg-[0-9]+\.[0-9]+(\.[0-9]+)?\.tar\.bz2' | sed -E 's/ffmpeg-|\.tar\.bz2//g' | sort -V | tail -1)
          echo "FF_VERSION=$LATEST" >> $GITHUB_ENV
          echo "Latest FFmpeg version: $LATEST"

      - name: Sequential build per architecture
        run: |
          for ARCH in $ARCHS; do
            echo "Building FFmpeg for $ARCH"

            BUILD_DIR="ffmpeg/$ARCH"
            mkdir -p $BUILD_DIR
            VERSION_FILE="$BUILD_DIR/version.txt"
            if [ -f "$VERSION_FILE" ]; then
              EXISTING=$(cat "$VERSION_FILE")
            else
              EXISTING="0.0.0"
            fi
            echo "Existing version: $EXISTING"

            if dpkg --compare-versions "$EXISTING" "ge" "$FF_VERSION"; then
              echo "Up-to-date, skipping $ARCH"
              continue
            fi

            # Clean old source
            rm -rf ffmpeg-$FF_VERSION
            wget https://ffmpeg.org/releases/ffmpeg-${FF_VERSION}.tar.bz2
            tar xjf ffmpeg-${FF_VERSION}.tar.bz2
            cd ffmpeg-${FF_VERSION}

            # Configure
            if [ "$ARCH" = "x86_64" ]; then
              ./configure \
                --prefix=$PWD/../$BUILD_DIR \
                --arch=x86_64 \
                --target-os=linux \
                --disable-doc \
                --disable-ffplay \
                --disable-network \
                --disable-debug \
                --enable-small \
                --disable-programs \
                --disable-everything \
                --enable-ffmpeg \
                --enable-ffprobe \
                --enable-decoder=subrip \
                --enable-decoder=dvdsub \
                --enable-decoder=hdmv_pgs \
                --enable-demuxer=mov \
                --enable-demuxer=matroska \
                --enable-muxer=mp4 \
                --enable-muxer=mkv \
                --enable-parser=subrip
            else
              ./configure \
                --prefix=$PWD/../$BUILD_DIR \
                --arch=aarch64 \
                --target-os=linux \
                --cross-prefix=aarch64-linux-gnu- \
                --disable-doc \
                --disable-ffplay \
                --disable-network \
                --disable-debug \
                --enable-small \
                --disable-programs \
                --disable-everything \
                --enable-ffmpeg \
                --enable-ffprobe \
                --enable-decoder=subrip \
                --enable-decoder=dvdsub \
                --enable-decoder=hdmv_pgs \
                --enable-demuxer=mov \
                --enable-demuxer=matroska \
                --enable-muxer=mp4 \
                --enable-muxer=mkv \
                --enable-parser=subrip
            fi

            make -j$(nproc)
            make install
            echo $FF_VERSION > ../$BUILD_DIR/version.txt
            cd ..

            echo "FFmpeg build complete for $ARCH"
          done

      - name: Commit and push built binaries
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Auto-build FFmpeg ${{ env.FF_VERSION }} (x86_64 + aarch64)"
          branch: main
          file_pattern: |
            ffmpeg/x86_64/ffmpeg
            ffmpeg/x86_64/ffprobe
            ffmpeg/x86_64/version.txt
            ffmpeg/aarch64/ffmpeg
            ffmpeg/aarch64/ffprobe
            ffmpeg/aarch64/version.txt
