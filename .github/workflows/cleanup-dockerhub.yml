name: Docker Hub Cleanup (Safe Test Mode)

on:
  workflow_dispatch:

env:
  DOCKER_IMAGE: your-dockerhub-username/tubesync-plex

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq python3 curl

      - name: Authenticate to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: List tags and simulate deletion
        run: |
          REPO=${{ env.DOCKER_IMAGE }}
          USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          TOKEN=${{ secrets.DOCKERHUB_TOKEN }}

          # REPO URL 인코딩
          REPO_ENCODED=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$REPO'''))")

          # 페이지네이션 처리
          URL="https://hub.docker.com/v2/repositories/$REPO_ENCODED/tags/?page_size=100"
          while [ -n "$URL" ]; do
            RESPONSE=$(curl -s -u $USERNAME:$TOKEN "$URL" || true)

            # 응답 검사
            if [[ -z "$RESPONSE" ]] || [[ "$RESPONSE" == "null" ]]; then
              echo "No response or repository not found, stopping."
              break
            fi

            TAGS=$(echo "$RESPONSE" | jq -r '.results[].name // empty')

            for TAG in $TAGS; do
              if [[ "$TAG" != "latest" && "$TAG" != "latest-amd64" && "$TAG" != "latest-arm64" ]]; then
                # TAG URL 인코딩
                TAG_ENCODED=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$TAG'''))")
                echo "[TEST MODE] Would delete tag: $TAG"
                # 실제 삭제 시 아래 주석 해제
                # curl -s -X DELETE -u $USERNAME:$TOKEN "https://hub.docker.com/v2/repositories/$REPO_ENCODED/tags/$TAG_ENCODED/" || true
              fi
            done

            # 다음 페이지 URL
            URL=$(echo "$RESPONSE" | jq -r '.next')
          done
