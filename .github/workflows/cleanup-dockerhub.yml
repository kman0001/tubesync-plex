name: Docker Hub Cleanup Multi-Arch Manifest

on:
  workflow_dispatch:

env:
  DOCKER_IMAGE: kman0001/tubesync-plex

jobs:
  cleanup-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq python3 curl

      - name: Authenticate to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Delete old tags and their manifests
        run: |
          REPO=${{ env.DOCKER_IMAGE }}
          USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          TOKEN=${{ secrets.DOCKERHUB_TOKEN }}

          # URL 인코딩
          REPO_ENCODED=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$REPO'''))")

          URL="https://hub.docker.com/v2/repositories/$REPO_ENCODED/tags/?page_size=100"
          while [ -n "$URL" ]; do
            RESPONSE=$(curl -s -u $USERNAME:$TOKEN "$URL" || true)

            # JSON 유효성 검사
            if ! echo "$RESPONSE" | jq empty >/dev/null 2>&1; then
              echo "API did not return valid JSON. Stopping."
              break
            fi

            # null-safe 태그 추출
            TAGS=$(echo "$RESPONSE" | jq -r '.results[]?.name // empty')

            for TAG in $TAGS; do
              if [[ "$TAG" != "latest" && "$TAG" != "latest-amd64" && "$TAG" != "latest-arm64" ]]; then
                TAG_ENCODED=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$TAG'''))")
                echo "Deleting tag and manifests: $TAG"

                # 1️⃣ 먼저 태그 삭제
                curl -s -X DELETE -u $USERNAME:$TOKEN "https://hub.docker.com/v2/repositories/$REPO_ENCODED/tags/$TAG_ENCODED/" || true

                # 2️⃣ 해당 태그에 연결된 manifests 삭제
                DIGESTS=$(curl -s -u $USERNAME:$TOKEN "https://hub.docker.com/v2/repositories/$REPO_ENCODED/tags/$TAG_ENCODED/" | jq -r '.images[].digest // empty')
                for DIGEST in $DIGESTS; do
                  DIGEST_ENCODED=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$DIGEST'''))")
                  echo "Deleting manifest: $DIGEST"
                  curl -s -X DELETE -u $USERNAME:$TOKEN "https://hub.docker.com/v2/repositories/$REPO_ENCODED/manifests/$DIGEST_ENCODED/" || true
                done
              fi
            done

            # 다음 페이지 URL
            URL=$(echo "$RESPONSE" | jq -r '.next')
          done
